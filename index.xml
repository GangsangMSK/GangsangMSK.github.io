<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>MSK&#39;s playground</title>
        <link>https://gangsangmsk.github.io/</link>
        <description>This is my cool site</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>wjdgudtk1234@gmail.com (Minsuk Kim)</managingEditor>
            <webMaster>wjdgudtk1234@gmail.com (Minsuk Kim)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sun, 25 Sep 2022 17:20:38 &#43;0900</lastBuildDate>
            <atom:link href="https://gangsangmsk.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>[Swift] Tuple</title>
    <link>https://gangsangmsk.github.io/tuple/</link>
    <pubDate>Sun, 25 Sep 2022 17:20:38 &#43;0900</pubDate>
    <author>Minsuk Kim</author>
    <guid>https://gangsangmsk.github.io/tuple/</guid>
    <description><![CDATA[Tuple(튜플) 튜플은 Swift 에서 가장 강력한 기능 중 하나이다. 여러 값을 하나의 개체에 일시적으로 묶는 방법이다. 튜플에는 타입과 상관없이 요소들을 저장할 수 있고, 저장된 값들이 모두 동일한 타입이어야 한다는 제약이 없다. 튜플의 요소들은 다양한 방법들을 이용해 접근할 수 있다.
인덱스 위치를 참조하여 접근할 수 있다. 1 2 3 4 let myTuple = (10, 12.1, &#34;Hi&#34;) let myString = myTuple.2 print(myString) //Hi 튜플의 요소를 추출하여 번수 또는 상수에 할당하여 사용할 수 있다.]]></description>
</item>
<item>
    <title>[Blog] utterance를 이용한 블로그 댓글 기능 만들기</title>
    <link>https://gangsangmsk.github.io/makeblogcommentswithutterance/</link>
    <pubDate>Wed, 21 Sep 2022 13:47:24 &#43;0900</pubDate>
    <author>Minsuk Kim</author>
    <guid>https://gangsangmsk.github.io/makeblogcommentswithutterance/</guid>
    <description><![CDATA[utterance를 사용한 이유 댓글 기능을 구현할 수 있는 여러 종류(disqus, gittalk, giscus 등)의 댓글 플랫폼들이 있지만, 많은 플랫폼 중에 utterances를 선택한 이유는 다음과 같다.
utterances는 Github 계정 로그인을 통해 댓글을 달고, 댓글이 달리면 알림이 Github Repository 의 Issue 로 올라오는 시스템이여서 댓글이 달리면 메일로 댓글 알림을 받을 수 있다.
그리고 광고가 없고 가볍다.
마지막으로, 마크다운 문법을 사용할 수 있다.
utterances 적용하기 1. Issue(댓글)이 저장될 Repository를 정하거나 생성한다. 나는 기존 블로그용으로 사용하는 GangsangMSK.]]></description>
</item>
<item>
    <title>[Swift Practice] in 22/09/20</title>
    <link>https://gangsangmsk.github.io/220920/</link>
    <pubDate>Tue, 20 Sep 2022 14:50:34 &#43;0900</pubDate>
    <author>Minsuk Kim</author>
    <guid>https://gangsangmsk.github.io/220920/</guid>
    <description><![CDATA[Simple Values 1 2 3 4 5 6 import UIKit var greeting = &#34;Hello, playground&#34; var x = 10 print(x) //10 Control Flow(제어 흐름) Functions and Closures(함수와 클로져) Objects and Classes(객체와 클래스) Enumerations and Structures(열거형과 구조체) Concurrency(동시성) Protocols and Extensions(프로토콜과 확장) Error Handling (오류 처리) Generics Style Guide Swift 스타일 가이드
Swift 공식 문서]]></description>
</item>
<item>
    <title>[Swift] 타입 어노테이션(Type annotation)과 타입 추론(Type inference)</title>
    <link>https://gangsangmsk.github.io/type_annotationtype_inference/</link>
    <pubDate>Mon, 19 Sep 2022 19:51:26 &#43;0900</pubDate>
    <author>Minsuk Kim</author>
    <guid>https://gangsangmsk.github.io/type_annotationtype_inference/</guid>
    <description><![CDATA[Swift는 타입 안전(Type safe) 프로그래밍 언어이다. 그로 인해 변수의 타입이 식별되면, 그 변수는 다른 타입의 데이터를 저장하는데 사용할 수 없다. 변수가 선언되 후에도 다른 타입의 데이터를 저장할 수 있는 loosely typed(Ex:JavaScript) 언어와 대조적이다.
변수 또는 상수의 식별 방법엔 두 가지가 존재한다.
타입 어노테이션(Type annotation)
변수 또는 상수가 코드 내에서 선언되는 시점에 데이터 타입을 정해주는 경우
변수 또는 상수 이름 다음에 타입 선언을 하면 된다. 1 var num : Int = 10 // : Int가 Type annotation 상수를 선언할 때도 타입 어노테이션을 통해 나중에 값을 할당할 수 있다.]]></description>
</item>
<item>
    <title>[Swift] var과 let</title>
    <link>https://gangsangmsk.github.io/varlet/</link>
    <pubDate>Mon, 19 Sep 2022 19:01:29 &#43;0900</pubDate>
    <author>Minsuk Kim</author>
    <guid>https://gangsangmsk.github.io/varlet/</guid>
    <description><![CDATA[var / 변수 변수는 프로그램에서 사용될 데이터를 저장하기 위한 메모리 공간이다.
변수는 할당된 값의 변경이 가능하다.
1 2 3 4 5 var 변수명 : 데이터 타입 // 사용법 var x = 0.0, y= 0.0, z = 0.0 // ,를 사용하여 여러개의 변수 선언 가능 var num = 10 // : Int 생략가능 num = 20 //문제 없음 let / 상수 상수(const)는 데이터 값을 저장하기 위한 메모리 공간을 제공하는 점은 변수와 비슷하나, 한번 할당되면 그 이후로는 값을 변경할 수 없다.]]></description>
</item>
<item>
    <title>[Swift] DataType(자료형)</title>
    <link>https://gangsangmsk.github.io/datatype/</link>
    <pubDate>Fri, 16 Sep 2022 18:39:03 &#43;0900</pubDate>
    <author>Minsuk Kim</author>
    <guid>https://gangsangmsk.github.io/datatype/</guid>
    <description><![CDATA[자료형(Data Type)의 종류 Int Integer는 42와 -23과 같은 소수점이 없는 정수이다. 정수는 부호(양수, 0 또는 음수) 또는 부호가 없는(양수 또는 0)이다.
Swift는 8, 16, 32 및 64비트 형태로 Unsigned Integer를 지원한다. 이 Integer는 C와 유사한 명명 규칙을 따르며, 8비트 Unsigned Integer는 UInt8 유형이고 32비트 부호 있는 정수는 Int32 유형이다. Swift의 모든 유형과 마찬가지로, 이러한 Integer 유형에는 대문자를 사용한다.
하지만 애플은 특정 크기의 데이터 타입보다는 Int 데이터 타입 사용을 권장한다.
Int 데이터 타입은 해당 코드가 실행되는 플랫폼에 맞는 정수 크기를 사용한다.]]></description>
</item>
<item>
    <title>[Blog] hugo &amp; Github을 사용한 블로그 구축</title>
    <link>https://gangsangmsk.github.io/makeblogwithhugoandgithub/</link>
    <pubDate>Tue, 13 Sep 2022 21:27:41 &#43;0900</pubDate>
    <author>Minsuk Kim</author>
    <guid>https://gangsangmsk.github.io/makeblogwithhugoandgithub/</guid>
    <description><![CDATA[개발환경 Hardware : Macbook Pro(16-inch,M1,2021) OS : macOS Monterey 12.5 Shell : zsh hugo : hugo v0.102.3+extended darwin/arm64 brew : Homebrew 3.6.1 블로그 구축 방법 Github repository 생성
블로그 구축을 위해
소스 원본 저장 및 관리용 개발용(Development) repository : blog
개발용 repository를 빌드한 결과물
서비스용 repositoty : (username).github.io
2개의 repository를 생성한다.
2개의 repository 사용은 블로그를 운영하는 데에 필수는 아니지만, 일괄적으로 Github repository에서 글 작성, 변경이나 버전 관리 등이 편하기에 사용한다.]]></description>
</item>
</channel>
</rss>
